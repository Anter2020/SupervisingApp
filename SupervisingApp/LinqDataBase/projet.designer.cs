#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NajmDefault.LinqDataBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PROJDB")]
	public partial class projetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertalarme(alarme instance);
    partial void Updatealarme(alarme instance);
    partial void Deletealarme(alarme instance);
    partial void Insertstation(station instance);
    partial void Updatestation(station instance);
    partial void Deletestation(station instance);
    partial void Insertalimentation(alimentation instance);
    partial void Updatealimentation(alimentation instance);
    partial void Deletealimentation(alimentation instance);
    partial void Insertbarémage(barémage instance);
    partial void Updatebarémage(barémage instance);
    partial void Deletebarémage(barémage instance);
    partial void Insertdata(data instance);
    partial void Updatedata(data instance);
    partial void Deletedata(data instance);
    partial void InsertmouvReservoir(mouvReservoir instance);
    partial void UpdatemouvReservoir(mouvReservoir instance);
    partial void DeletemouvReservoir(mouvReservoir instance);
    partial void Insertpay(pay instance);
    partial void Updatepay(pay instance);
    partial void Deletepay(pay instance);
    partial void Insertproduit(produit instance);
    partial void Updateproduit(produit instance);
    partial void Deleteproduit(produit instance);
    partial void Insertremplissage(remplissage instance);
    partial void Updateremplissage(remplissage instance);
    partial void Deleteremplissage(remplissage instance);
    partial void Insertreservoir(reservoir instance);
    partial void Updatereservoir(reservoir instance);
    partial void Deletereservoir(reservoir instance);
    partial void Insertresponsable(responsable instance);
    partial void Updateresponsable(responsable instance);
    partial void Deleteresponsable(responsable instance);
    partial void InsertSiteProduit(SiteProduit instance);
    partial void UpdateSiteProduit(SiteProduit instance);
    partial void DeleteSiteProduit(SiteProduit instance);
    partial void Insertsite(site instance);
    partial void Updatesite(site instance);
    partial void Deletesite(site instance);
    partial void InsertSiteStation(SiteStation instance);
    partial void UpdateSiteStation(SiteStation instance);
    partial void DeleteSiteStation(SiteStation instance);
    #endregion
		
		public projetDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProjDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<alarme> alarmes
		{
			get
			{
				return this.GetTable<alarme>();
			}
		}
		
		public System.Data.Linq.Table<station> stations
		{
			get
			{
				return this.GetTable<station>();
			}
		}
		
		public System.Data.Linq.Table<alimentation> alimentations
		{
			get
			{
				return this.GetTable<alimentation>();
			}
		}
		
		public System.Data.Linq.Table<barémage> barémages
		{
			get
			{
				return this.GetTable<barémage>();
			}
		}
		
		public System.Data.Linq.Table<data> datas
		{
			get
			{
				return this.GetTable<data>();
			}
		}
		
		public System.Data.Linq.Table<mouvReservoir> mouvReservoirs
		{
			get
			{
				return this.GetTable<mouvReservoir>();
			}
		}
		
		public System.Data.Linq.Table<pay> pays
		{
			get
			{
				return this.GetTable<pay>();
			}
		}
		
		public System.Data.Linq.Table<produit> produits
		{
			get
			{
				return this.GetTable<produit>();
			}
		}
		
		public System.Data.Linq.Table<remplissage> remplissages
		{
			get
			{
				return this.GetTable<remplissage>();
			}
		}
		
		public System.Data.Linq.Table<reservoir> reservoirs
		{
			get
			{
				return this.GetTable<reservoir>();
			}
		}
		
		public System.Data.Linq.Table<responsable> responsables
		{
			get
			{
				return this.GetTable<responsable>();
			}
		}
		
		public System.Data.Linq.Table<SiteProduit> SiteProduits
		{
			get
			{
				return this.GetTable<SiteProduit>();
			}
		}
		
		public System.Data.Linq.Table<site> sites
		{
			get
			{
				return this.GetTable<site>();
			}
		}
		
		public System.Data.Linq.Table<SiteStation> SiteStations
		{
			get
			{
				return this.GetTable<SiteStation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alarmes")]
	public partial class alarme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _text;
		
		private System.Nullable<int> _stationID;
		
		private System.Nullable<bool> _state;
		
		private EntityRef<station> _station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnstationIDChanging(System.Nullable<int> value);
    partial void OnstationIDChanged();
    partial void OnstateChanging(System.Nullable<bool> value);
    partial void OnstateChanged();
    #endregion
		
		public alarme()
		{
			this._station = default(EntityRef<station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NChar(200)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int")]
		public System.Nullable<int> stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit")]
		public System.Nullable<bool> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_alarme", Storage="_station", ThisKey="stationID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public station station
		{
			get
			{
				return this._station.Entity;
			}
			set
			{
				station previousValue = this._station.Entity;
				if (((previousValue != value) 
							|| (this._station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._station.Entity = null;
						previousValue.alarmes.Remove(this);
					}
					this._station.Entity = value;
					if ((value != null))
					{
						value.alarmes.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stations")]
	public partial class station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _adresse;
		
		private string _tel;
		
		private string _x;
		
		private string _y;
		
		private System.Nullable<bool> _etat;
		
		private System.Nullable<bool> _statut;
		
		private string _pay;
		
		private string _contact;
		
		private int _id;
		
		private string _respCIN;
		
		private string _connexion;
		
		private string _tnkNbr;
		
		private EntitySet<alarme> _alarmes;
		
		private EntitySet<alimentation> _alimentations;
		
		private EntitySet<reservoir> _reservoirs;
		
		private EntitySet<SiteStation> _SiteStations;
		
		private EntityRef<pay> _pay1;
		
		private EntityRef<responsable> _responsable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnxChanging(string value);
    partial void OnxChanged();
    partial void OnyChanging(string value);
    partial void OnyChanged();
    partial void OnetatChanging(System.Nullable<bool> value);
    partial void OnetatChanged();
    partial void OnstatutChanging(System.Nullable<bool> value);
    partial void OnstatutChanged();
    partial void OnpayChanging(string value);
    partial void OnpayChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrespCINChanging(string value);
    partial void OnrespCINChanged();
    partial void OnconnexionChanging(string value);
    partial void OnconnexionChanged();
    partial void OntnkNbrChanging(string value);
    partial void OntnkNbrChanged();
    #endregion
		
		public station()
		{
			this._alarmes = new EntitySet<alarme>(new Action<alarme>(this.attach_alarmes), new Action<alarme>(this.detach_alarmes));
			this._alimentations = new EntitySet<alimentation>(new Action<alimentation>(this.attach_alimentations), new Action<alimentation>(this.detach_alimentations));
			this._reservoirs = new EntitySet<reservoir>(new Action<reservoir>(this.attach_reservoirs), new Action<reservoir>(this.detach_reservoirs));
			this._SiteStations = new EntitySet<SiteStation>(new Action<SiteStation>(this.attach_SiteStations), new Action<SiteStation>(this.detach_SiteStations));
			this._pay1 = default(EntityRef<pay>);
			this._responsable = default(EntityRef<responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NChar(100)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="NChar(100)")]
		public string x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="NChar(100)")]
		public string y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etat", DbType="Bit")]
		public System.Nullable<bool> etat
		{
			get
			{
				return this._etat;
			}
			set
			{
				if ((this._etat != value))
				{
					this.OnetatChanging(value);
					this.SendPropertyChanging();
					this._etat = value;
					this.SendPropertyChanged("etat");
					this.OnetatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statut", DbType="Bit")]
		public System.Nullable<bool> statut
		{
			get
			{
				return this._statut;
			}
			set
			{
				if ((this._statut != value))
				{
					this.OnstatutChanging(value);
					this.SendPropertyChanging();
					this._statut = value;
					this.SendPropertyChanged("statut");
					this.OnstatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay", DbType="NChar(100)")]
		public string pay
		{
			get
			{
				return this._pay;
			}
			set
			{
				if ((this._pay != value))
				{
					if (this._pay1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpayChanging(value);
					this.SendPropertyChanging();
					this._pay = value;
					this.SendPropertyChanged("pay");
					this.OnpayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="NChar(100)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_respCIN", DbType="NChar(100)")]
		public string respCIN
		{
			get
			{
				return this._respCIN;
			}
			set
			{
				if ((this._respCIN != value))
				{
					if (this._responsable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrespCINChanging(value);
					this.SendPropertyChanging();
					this._respCIN = value;
					this.SendPropertyChanged("respCIN");
					this.OnrespCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connexion", DbType="NChar(100)")]
		public string connexion
		{
			get
			{
				return this._connexion;
			}
			set
			{
				if ((this._connexion != value))
				{
					this.OnconnexionChanging(value);
					this.SendPropertyChanging();
					this._connexion = value;
					this.SendPropertyChanged("connexion");
					this.OnconnexionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tnkNbr", DbType="NChar(100)")]
		public string tnkNbr
		{
			get
			{
				return this._tnkNbr;
			}
			set
			{
				if ((this._tnkNbr != value))
				{
					this.OntnkNbrChanging(value);
					this.SendPropertyChanging();
					this._tnkNbr = value;
					this.SendPropertyChanged("tnkNbr");
					this.OntnkNbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_alarme", Storage="_alarmes", ThisKey="id", OtherKey="stationID")]
		public EntitySet<alarme> alarmes
		{
			get
			{
				return this._alarmes;
			}
			set
			{
				this._alarmes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_alimentation", Storage="_alimentations", ThisKey="id", OtherKey="stationID")]
		public EntitySet<alimentation> alimentations
		{
			get
			{
				return this._alimentations;
			}
			set
			{
				this._alimentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_reservoir", Storage="_reservoirs", ThisKey="id", OtherKey="stationID")]
		public EntitySet<reservoir> reservoirs
		{
			get
			{
				return this._reservoirs;
			}
			set
			{
				this._reservoirs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_SiteStation", Storage="_SiteStations", ThisKey="id", OtherKey="stationID")]
		public EntitySet<SiteStation> SiteStations
		{
			get
			{
				return this._SiteStations;
			}
			set
			{
				this._SiteStations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pay_station", Storage="_pay1", ThisKey="pay", OtherKey="name", IsForeignKey=true, DeleteRule="CASCADE")]
		public pay pay1
		{
			get
			{
				return this._pay1.Entity;
			}
			set
			{
				pay previousValue = this._pay1.Entity;
				if (((previousValue != value) 
							|| (this._pay1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pay1.Entity = null;
						previousValue.stations.Remove(this);
					}
					this._pay1.Entity = value;
					if ((value != null))
					{
						value.stations.Add(this);
						this._pay = value.name;
					}
					else
					{
						this._pay = default(string);
					}
					this.SendPropertyChanged("pay1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="responsable_station", Storage="_responsable", ThisKey="respCIN", OtherKey="cin", IsForeignKey=true)]
		public responsable responsable
		{
			get
			{
				return this._responsable.Entity;
			}
			set
			{
				responsable previousValue = this._responsable.Entity;
				if (((previousValue != value) 
							|| (this._responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._responsable.Entity = null;
						previousValue.stations.Remove(this);
					}
					this._responsable.Entity = value;
					if ((value != null))
					{
						value.stations.Add(this);
						this._respCIN = value.cin;
					}
					else
					{
						this._respCIN = default(string);
					}
					this.SendPropertyChanged("responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_alarmes(alarme entity)
		{
			this.SendPropertyChanging();
			entity.station = this;
		}
		
		private void detach_alarmes(alarme entity)
		{
			this.SendPropertyChanging();
			entity.station = null;
		}
		
		private void attach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.station = this;
		}
		
		private void detach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.station = null;
		}
		
		private void attach_reservoirs(reservoir entity)
		{
			this.SendPropertyChanging();
			entity.station = this;
		}
		
		private void detach_reservoirs(reservoir entity)
		{
			this.SendPropertyChanging();
			entity.station = null;
		}
		
		private void attach_SiteStations(SiteStation entity)
		{
			this.SendPropertyChanging();
			entity.station = this;
		}
		
		private void detach_SiteStations(SiteStation entity)
		{
			this.SendPropertyChanging();
			entity.station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alimentations")]
	public partial class alimentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _chauffeur;
		
		private string _camion;
		
		private System.Nullable<int> _produitID;
		
		private System.Nullable<int> _qte;
		
		private System.Nullable<int> _siteID;
		
		private System.Nullable<int> _stationID;
		
		private string _state;
		
		private string _responsable;
		
		private System.Nullable<bool> _sent;
		
		private EntityRef<station> _station;
		
		private EntityRef<produit> _produit;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnchauffeurChanging(string value);
    partial void OnchauffeurChanged();
    partial void OncamionChanging(string value);
    partial void OncamionChanged();
    partial void OnproduitIDChanging(System.Nullable<int> value);
    partial void OnproduitIDChanged();
    partial void OnqteChanging(System.Nullable<int> value);
    partial void OnqteChanged();
    partial void OnsiteIDChanging(System.Nullable<int> value);
    partial void OnsiteIDChanged();
    partial void OnstationIDChanging(System.Nullable<int> value);
    partial void OnstationIDChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnresponsableChanging(string value);
    partial void OnresponsableChanged();
    partial void OnsentChanging(System.Nullable<bool> value);
    partial void OnsentChanged();
    #endregion
		
		public alimentation()
		{
			this._station = default(EntityRef<station>);
			this._produit = default(EntityRef<produit>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chauffeur", DbType="NChar(100)")]
		public string chauffeur
		{
			get
			{
				return this._chauffeur;
			}
			set
			{
				if ((this._chauffeur != value))
				{
					this.OnchauffeurChanging(value);
					this.SendPropertyChanging();
					this._chauffeur = value;
					this.SendPropertyChanged("chauffeur");
					this.OnchauffeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camion", DbType="NChar(100)")]
		public string camion
		{
			get
			{
				return this._camion;
			}
			set
			{
				if ((this._camion != value))
				{
					this.OncamionChanging(value);
					this.SendPropertyChanging();
					this._camion = value;
					this.SendPropertyChanged("camion");
					this.OncamionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_produitID", DbType="Int")]
		public System.Nullable<int> produitID
		{
			get
			{
				return this._produitID;
			}
			set
			{
				if ((this._produitID != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproduitIDChanging(value);
					this.SendPropertyChanging();
					this._produitID = value;
					this.SendPropertyChanged("produitID");
					this.OnproduitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qte", DbType="Int")]
		public System.Nullable<int> qte
		{
			get
			{
				return this._qte;
			}
			set
			{
				if ((this._qte != value))
				{
					this.OnqteChanging(value);
					this.SendPropertyChanging();
					this._qte = value;
					this.SendPropertyChanged("qte");
					this.OnqteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int")]
		public System.Nullable<int> siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int")]
		public System.Nullable<int> stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NChar(100)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsable", DbType="NVarChar(256)")]
		public string responsable
		{
			get
			{
				return this._responsable;
			}
			set
			{
				if ((this._responsable != value))
				{
					this.OnresponsableChanging(value);
					this.SendPropertyChanging();
					this._responsable = value;
					this.SendPropertyChanged("responsable");
					this.OnresponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent", DbType="Bit")]
		public System.Nullable<bool> sent
		{
			get
			{
				return this._sent;
			}
			set
			{
				if ((this._sent != value))
				{
					this.OnsentChanging(value);
					this.SendPropertyChanging();
					this._sent = value;
					this.SendPropertyChanged("sent");
					this.OnsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_alimentation", Storage="_station", ThisKey="stationID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public station station
		{
			get
			{
				return this._station.Entity;
			}
			set
			{
				station previousValue = this._station.Entity;
				if (((previousValue != value) 
							|| (this._station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._station.Entity = null;
						previousValue.alimentations.Remove(this);
					}
					this._station.Entity = value;
					if ((value != null))
					{
						value.alimentations.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_alimentation", Storage="_produit", ThisKey="produitID", OtherKey="id", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.alimentations.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.alimentations.Add(this);
						this._produitID = value.id;
					}
					else
					{
						this._produitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_alimentation", Storage="_site", ThisKey="siteID", OtherKey="id", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.alimentations.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.alimentations.Add(this);
						this._siteID = value.id;
					}
					else
					{
						this._siteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.barémage")]
	public partial class barémage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _reservoirID;
		
		private System.Nullable<int> _vol20;
		
		private System.Nullable<int> _vol19;
		
		private System.Nullable<int> _vol18;
		
		private System.Nullable<int> _vol17;
		
		private System.Nullable<int> _vol16;
		
		private System.Nullable<int> _vol15;
		
		private System.Nullable<int> _vol14;
		
		private System.Nullable<int> _vol13;
		
		private System.Nullable<int> _vol12;
		
		private System.Nullable<int> _vol11;
		
		private System.Nullable<int> _vol10;
		
		private System.Nullable<int> _vol9;
		
		private System.Nullable<int> _vol8;
		
		private System.Nullable<int> _vol7;
		
		private System.Nullable<int> _vol6;
		
		private System.Nullable<int> _vol5;
		
		private System.Nullable<int> _vol4;
		
		private System.Nullable<int> _vol3;
		
		private System.Nullable<int> _vol2;
		
		private System.Nullable<int> _vol1;
		
		private EntityRef<reservoir> _reservoir;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnreservoirIDChanging(int value);
    partial void OnreservoirIDChanged();
    partial void Onvol20Changing(System.Nullable<int> value);
    partial void Onvol20Changed();
    partial void Onvol19Changing(System.Nullable<int> value);
    partial void Onvol19Changed();
    partial void Onvol18Changing(System.Nullable<int> value);
    partial void Onvol18Changed();
    partial void Onvol17Changing(System.Nullable<int> value);
    partial void Onvol17Changed();
    partial void Onvol16Changing(System.Nullable<int> value);
    partial void Onvol16Changed();
    partial void Onvol15Changing(System.Nullable<int> value);
    partial void Onvol15Changed();
    partial void Onvol14Changing(System.Nullable<int> value);
    partial void Onvol14Changed();
    partial void Onvol13Changing(System.Nullable<int> value);
    partial void Onvol13Changed();
    partial void Onvol12Changing(System.Nullable<int> value);
    partial void Onvol12Changed();
    partial void Onvol11Changing(System.Nullable<int> value);
    partial void Onvol11Changed();
    partial void Onvol10Changing(System.Nullable<int> value);
    partial void Onvol10Changed();
    partial void Onvol9Changing(System.Nullable<int> value);
    partial void Onvol9Changed();
    partial void Onvol8Changing(System.Nullable<int> value);
    partial void Onvol8Changed();
    partial void Onvol7Changing(System.Nullable<int> value);
    partial void Onvol7Changed();
    partial void Onvol6Changing(System.Nullable<int> value);
    partial void Onvol6Changed();
    partial void Onvol5Changing(System.Nullable<int> value);
    partial void Onvol5Changed();
    partial void Onvol4Changing(System.Nullable<int> value);
    partial void Onvol4Changed();
    partial void Onvol3Changing(System.Nullable<int> value);
    partial void Onvol3Changed();
    partial void Onvol2Changing(System.Nullable<int> value);
    partial void Onvol2Changed();
    partial void Onvol1Changing(System.Nullable<int> value);
    partial void Onvol1Changed();
    #endregion
		
		public barémage()
		{
			this._reservoir = default(EntityRef<reservoir>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservoirID", DbType="Int NOT NULL")]
		public int reservoirID
		{
			get
			{
				return this._reservoirID;
			}
			set
			{
				if ((this._reservoirID != value))
				{
					if (this._reservoir.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreservoirIDChanging(value);
					this.SendPropertyChanging();
					this._reservoirID = value;
					this.SendPropertyChanged("reservoirID");
					this.OnreservoirIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol20", DbType="Int")]
		public System.Nullable<int> vol20
		{
			get
			{
				return this._vol20;
			}
			set
			{
				if ((this._vol20 != value))
				{
					this.Onvol20Changing(value);
					this.SendPropertyChanging();
					this._vol20 = value;
					this.SendPropertyChanged("vol20");
					this.Onvol20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol19", DbType="Int")]
		public System.Nullable<int> vol19
		{
			get
			{
				return this._vol19;
			}
			set
			{
				if ((this._vol19 != value))
				{
					this.Onvol19Changing(value);
					this.SendPropertyChanging();
					this._vol19 = value;
					this.SendPropertyChanged("vol19");
					this.Onvol19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol18", DbType="Int")]
		public System.Nullable<int> vol18
		{
			get
			{
				return this._vol18;
			}
			set
			{
				if ((this._vol18 != value))
				{
					this.Onvol18Changing(value);
					this.SendPropertyChanging();
					this._vol18 = value;
					this.SendPropertyChanged("vol18");
					this.Onvol18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol17", DbType="Int")]
		public System.Nullable<int> vol17
		{
			get
			{
				return this._vol17;
			}
			set
			{
				if ((this._vol17 != value))
				{
					this.Onvol17Changing(value);
					this.SendPropertyChanging();
					this._vol17 = value;
					this.SendPropertyChanged("vol17");
					this.Onvol17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol16", DbType="Int")]
		public System.Nullable<int> vol16
		{
			get
			{
				return this._vol16;
			}
			set
			{
				if ((this._vol16 != value))
				{
					this.Onvol16Changing(value);
					this.SendPropertyChanging();
					this._vol16 = value;
					this.SendPropertyChanged("vol16");
					this.Onvol16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol15", DbType="Int")]
		public System.Nullable<int> vol15
		{
			get
			{
				return this._vol15;
			}
			set
			{
				if ((this._vol15 != value))
				{
					this.Onvol15Changing(value);
					this.SendPropertyChanging();
					this._vol15 = value;
					this.SendPropertyChanged("vol15");
					this.Onvol15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol14", DbType="Int")]
		public System.Nullable<int> vol14
		{
			get
			{
				return this._vol14;
			}
			set
			{
				if ((this._vol14 != value))
				{
					this.Onvol14Changing(value);
					this.SendPropertyChanging();
					this._vol14 = value;
					this.SendPropertyChanged("vol14");
					this.Onvol14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol13", DbType="Int")]
		public System.Nullable<int> vol13
		{
			get
			{
				return this._vol13;
			}
			set
			{
				if ((this._vol13 != value))
				{
					this.Onvol13Changing(value);
					this.SendPropertyChanging();
					this._vol13 = value;
					this.SendPropertyChanged("vol13");
					this.Onvol13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol12", DbType="Int")]
		public System.Nullable<int> vol12
		{
			get
			{
				return this._vol12;
			}
			set
			{
				if ((this._vol12 != value))
				{
					this.Onvol12Changing(value);
					this.SendPropertyChanging();
					this._vol12 = value;
					this.SendPropertyChanged("vol12");
					this.Onvol12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol11", DbType="Int")]
		public System.Nullable<int> vol11
		{
			get
			{
				return this._vol11;
			}
			set
			{
				if ((this._vol11 != value))
				{
					this.Onvol11Changing(value);
					this.SendPropertyChanging();
					this._vol11 = value;
					this.SendPropertyChanged("vol11");
					this.Onvol11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol10", DbType="Int")]
		public System.Nullable<int> vol10
		{
			get
			{
				return this._vol10;
			}
			set
			{
				if ((this._vol10 != value))
				{
					this.Onvol10Changing(value);
					this.SendPropertyChanging();
					this._vol10 = value;
					this.SendPropertyChanged("vol10");
					this.Onvol10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol9", DbType="Int")]
		public System.Nullable<int> vol9
		{
			get
			{
				return this._vol9;
			}
			set
			{
				if ((this._vol9 != value))
				{
					this.Onvol9Changing(value);
					this.SendPropertyChanging();
					this._vol9 = value;
					this.SendPropertyChanged("vol9");
					this.Onvol9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol8", DbType="Int")]
		public System.Nullable<int> vol8
		{
			get
			{
				return this._vol8;
			}
			set
			{
				if ((this._vol8 != value))
				{
					this.Onvol8Changing(value);
					this.SendPropertyChanging();
					this._vol8 = value;
					this.SendPropertyChanged("vol8");
					this.Onvol8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol7", DbType="Int")]
		public System.Nullable<int> vol7
		{
			get
			{
				return this._vol7;
			}
			set
			{
				if ((this._vol7 != value))
				{
					this.Onvol7Changing(value);
					this.SendPropertyChanging();
					this._vol7 = value;
					this.SendPropertyChanged("vol7");
					this.Onvol7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol6", DbType="Int")]
		public System.Nullable<int> vol6
		{
			get
			{
				return this._vol6;
			}
			set
			{
				if ((this._vol6 != value))
				{
					this.Onvol6Changing(value);
					this.SendPropertyChanging();
					this._vol6 = value;
					this.SendPropertyChanged("vol6");
					this.Onvol6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol5", DbType="Int")]
		public System.Nullable<int> vol5
		{
			get
			{
				return this._vol5;
			}
			set
			{
				if ((this._vol5 != value))
				{
					this.Onvol5Changing(value);
					this.SendPropertyChanging();
					this._vol5 = value;
					this.SendPropertyChanged("vol5");
					this.Onvol5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol4", DbType="Int")]
		public System.Nullable<int> vol4
		{
			get
			{
				return this._vol4;
			}
			set
			{
				if ((this._vol4 != value))
				{
					this.Onvol4Changing(value);
					this.SendPropertyChanging();
					this._vol4 = value;
					this.SendPropertyChanged("vol4");
					this.Onvol4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol3", DbType="Int")]
		public System.Nullable<int> vol3
		{
			get
			{
				return this._vol3;
			}
			set
			{
				if ((this._vol3 != value))
				{
					this.Onvol3Changing(value);
					this.SendPropertyChanging();
					this._vol3 = value;
					this.SendPropertyChanged("vol3");
					this.Onvol3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol2", DbType="Int")]
		public System.Nullable<int> vol2
		{
			get
			{
				return this._vol2;
			}
			set
			{
				if ((this._vol2 != value))
				{
					this.Onvol2Changing(value);
					this.SendPropertyChanging();
					this._vol2 = value;
					this.SendPropertyChanged("vol2");
					this.Onvol2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol1", DbType="Int")]
		public System.Nullable<int> vol1
		{
			get
			{
				return this._vol1;
			}
			set
			{
				if ((this._vol1 != value))
				{
					this.Onvol1Changing(value);
					this.SendPropertyChanging();
					this._vol1 = value;
					this.SendPropertyChanged("vol1");
					this.Onvol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reservoir_barémage", Storage="_reservoir", ThisKey="reservoirID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public reservoir reservoir
		{
			get
			{
				return this._reservoir.Entity;
			}
			set
			{
				reservoir previousValue = this._reservoir.Entity;
				if (((previousValue != value) 
							|| (this._reservoir.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._reservoir.Entity = null;
						previousValue.barémages.Remove(this);
					}
					this._reservoir.Entity = value;
					if ((value != null))
					{
						value.barémages.Add(this);
						this._reservoirID = value.id;
					}
					else
					{
						this._reservoirID = default(int);
					}
					this.SendPropertyChanged("reservoir");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data")]
	public partial class data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _taille;
		
		private System.Nullable<int> _nbr;
		
		private string _signalForce;
		
		private string _PSW;
		
		private System.Nullable<bool> _newAlert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntailleChanging(string value);
    partial void OntailleChanged();
    partial void OnnbrChanging(System.Nullable<int> value);
    partial void OnnbrChanged();
    partial void OnsignalForceChanging(string value);
    partial void OnsignalForceChanged();
    partial void OnPSWChanging(string value);
    partial void OnPSWChanged();
    partial void OnnewAlertChanging(System.Nullable<bool> value);
    partial void OnnewAlertChanged();
    #endregion
		
		public data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taille", DbType="NChar(100)")]
		public string taille
		{
			get
			{
				return this._taille;
			}
			set
			{
				if ((this._taille != value))
				{
					this.OntailleChanging(value);
					this.SendPropertyChanging();
					this._taille = value;
					this.SendPropertyChanged("taille");
					this.OntailleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbr", DbType="Int")]
		public System.Nullable<int> nbr
		{
			get
			{
				return this._nbr;
			}
			set
			{
				if ((this._nbr != value))
				{
					this.OnnbrChanging(value);
					this.SendPropertyChanging();
					this._nbr = value;
					this.SendPropertyChanged("nbr");
					this.OnnbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signalForce", DbType="NChar(100)")]
		public string signalForce
		{
			get
			{
				return this._signalForce;
			}
			set
			{
				if ((this._signalForce != value))
				{
					this.OnsignalForceChanging(value);
					this.SendPropertyChanging();
					this._signalForce = value;
					this.SendPropertyChanged("signalForce");
					this.OnsignalForceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSW", DbType="NVarChar(8)")]
		public string PSW
		{
			get
			{
				return this._PSW;
			}
			set
			{
				if ((this._PSW != value))
				{
					this.OnPSWChanging(value);
					this.SendPropertyChanging();
					this._PSW = value;
					this.SendPropertyChanged("PSW");
					this.OnPSWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newAlert", DbType="Bit")]
		public System.Nullable<bool> newAlert
		{
			get
			{
				return this._newAlert;
			}
			set
			{
				if ((this._newAlert != value))
				{
					this.OnnewAlertChanging(value);
					this.SendPropertyChanging();
					this._newAlert = value;
					this.SendPropertyChanged("newAlert");
					this.OnnewAlertChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mouvReservoir")]
	public partial class mouvReservoir : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _reservoirID;
		
		private System.Nullable<int> _niveau;
		
		private EntityRef<reservoir> _reservoir;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnreservoirIDChanging(System.Nullable<int> value);
    partial void OnreservoirIDChanged();
    partial void OnniveauChanging(System.Nullable<int> value);
    partial void OnniveauChanged();
    #endregion
		
		public mouvReservoir()
		{
			this._reservoir = default(EntityRef<reservoir>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservoirID", DbType="Int")]
		public System.Nullable<int> reservoirID
		{
			get
			{
				return this._reservoirID;
			}
			set
			{
				if ((this._reservoirID != value))
				{
					if (this._reservoir.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreservoirIDChanging(value);
					this.SendPropertyChanging();
					this._reservoirID = value;
					this.SendPropertyChanged("reservoirID");
					this.OnreservoirIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveau", DbType="Int")]
		public System.Nullable<int> niveau
		{
			get
			{
				return this._niveau;
			}
			set
			{
				if ((this._niveau != value))
				{
					this.OnniveauChanging(value);
					this.SendPropertyChanging();
					this._niveau = value;
					this.SendPropertyChanged("niveau");
					this.OnniveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reservoir_mouvReservoir", Storage="_reservoir", ThisKey="reservoirID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public reservoir reservoir
		{
			get
			{
				return this._reservoir.Entity;
			}
			set
			{
				reservoir previousValue = this._reservoir.Entity;
				if (((previousValue != value) 
							|| (this._reservoir.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._reservoir.Entity = null;
						previousValue.mouvReservoirs.Remove(this);
					}
					this._reservoir.Entity = value;
					if ((value != null))
					{
						value.mouvReservoirs.Add(this);
						this._reservoirID = value.id;
					}
					else
					{
						this._reservoirID = default(Nullable<int>);
					}
					this.SendPropertyChanged("reservoir");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pays")]
	public partial class pay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _flag;
		
		private string _map;
		
		private EntitySet<station> _stations;
		
		private EntitySet<site> _sites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnflagChanging(string value);
    partial void OnflagChanged();
    partial void OnmapChanging(string value);
    partial void OnmapChanged();
    #endregion
		
		public pay()
		{
			this._stations = new EntitySet<station>(new Action<station>(this.attach_stations), new Action<station>(this.detach_stations));
			this._sites = new EntitySet<site>(new Action<site>(this.attach_sites), new Action<site>(this.detach_sites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="NChar(100)")]
		public string flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map", DbType="NChar(100)")]
		public string map
		{
			get
			{
				return this._map;
			}
			set
			{
				if ((this._map != value))
				{
					this.OnmapChanging(value);
					this.SendPropertyChanging();
					this._map = value;
					this.SendPropertyChanged("map");
					this.OnmapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pay_station", Storage="_stations", ThisKey="name", OtherKey="pay")]
		public EntitySet<station> stations
		{
			get
			{
				return this._stations;
			}
			set
			{
				this._stations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pay_site", Storage="_sites", ThisKey="name", OtherKey="pay")]
		public EntitySet<site> sites
		{
			get
			{
				return this._sites;
			}
			set
			{
				this._sites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stations(station entity)
		{
			this.SendPropertyChanging();
			entity.pay1 = this;
		}
		
		private void detach_stations(station entity)
		{
			this.SendPropertyChanging();
			entity.pay1 = null;
		}
		
		private void attach_sites(site entity)
		{
			this.SendPropertyChanging();
			entity.pay1 = this;
		}
		
		private void detach_sites(site entity)
		{
			this.SendPropertyChanging();
			entity.pay1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produits")]
	public partial class produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _ref;
		
		private EntitySet<alimentation> _alimentations;
		
		private EntitySet<remplissage> _remplissages;
		
		private EntitySet<reservoir> _reservoirs;
		
		private EntitySet<SiteProduit> _SiteProduits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnrefChanging(string value);
    partial void OnrefChanged();
    #endregion
		
		public produit()
		{
			this._alimentations = new EntitySet<alimentation>(new Action<alimentation>(this.attach_alimentations), new Action<alimentation>(this.detach_alimentations));
			this._remplissages = new EntitySet<remplissage>(new Action<remplissage>(this.attach_remplissages), new Action<remplissage>(this.detach_remplissages));
			this._reservoirs = new EntitySet<reservoir>(new Action<reservoir>(this.attach_reservoirs), new Action<reservoir>(this.detach_reservoirs));
			this._SiteProduits = new EntitySet<SiteProduit>(new Action<SiteProduit>(this.attach_SiteProduits), new Action<SiteProduit>(this.detach_SiteProduits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NChar(100)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref", Storage="_ref", DbType="NChar(100)")]
		public string @ref
		{
			get
			{
				return this._ref;
			}
			set
			{
				if ((this._ref != value))
				{
					this.OnrefChanging(value);
					this.SendPropertyChanging();
					this._ref = value;
					this.SendPropertyChanged("@ref");
					this.OnrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_alimentation", Storage="_alimentations", ThisKey="id", OtherKey="produitID")]
		public EntitySet<alimentation> alimentations
		{
			get
			{
				return this._alimentations;
			}
			set
			{
				this._alimentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_remplissage", Storage="_remplissages", ThisKey="id", OtherKey="productID")]
		public EntitySet<remplissage> remplissages
		{
			get
			{
				return this._remplissages;
			}
			set
			{
				this._remplissages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_reservoir", Storage="_reservoirs", ThisKey="id", OtherKey="productID")]
		public EntitySet<reservoir> reservoirs
		{
			get
			{
				return this._reservoirs;
			}
			set
			{
				this._reservoirs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_SiteProduit", Storage="_SiteProduits", ThisKey="id", OtherKey="produitID")]
		public EntitySet<SiteProduit> SiteProduits
		{
			get
			{
				return this._SiteProduits;
			}
			set
			{
				this._SiteProduits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
		
		private void attach_remplissages(remplissage entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_remplissages(remplissage entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
		
		private void attach_reservoirs(reservoir entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_reservoirs(reservoir entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
		
		private void attach_SiteProduits(SiteProduit entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_SiteProduits(SiteProduit entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.remplissage")]
	public partial class remplissage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _qte;
		
		private System.Nullable<int> _siteID;
		
		private System.Nullable<int> _productID;
		
		private string _responsable;
		
		private EntityRef<produit> _produit;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnqteChanging(System.Nullable<int> value);
    partial void OnqteChanged();
    partial void OnsiteIDChanging(System.Nullable<int> value);
    partial void OnsiteIDChanged();
    partial void OnproductIDChanging(System.Nullable<int> value);
    partial void OnproductIDChanged();
    partial void OnresponsableChanging(string value);
    partial void OnresponsableChanged();
    #endregion
		
		public remplissage()
		{
			this._produit = default(EntityRef<produit>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qte", DbType="Int")]
		public System.Nullable<int> qte
		{
			get
			{
				return this._qte;
			}
			set
			{
				if ((this._qte != value))
				{
					this.OnqteChanging(value);
					this.SendPropertyChanging();
					this._qte = value;
					this.SendPropertyChanged("qte");
					this.OnqteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int")]
		public System.Nullable<int> siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int")]
		public System.Nullable<int> productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsable", DbType="NVarChar(256)")]
		public string responsable
		{
			get
			{
				return this._responsable;
			}
			set
			{
				if ((this._responsable != value))
				{
					this.OnresponsableChanging(value);
					this.SendPropertyChanging();
					this._responsable = value;
					this.SendPropertyChanged("responsable");
					this.OnresponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_remplissage", Storage="_produit", ThisKey="productID", OtherKey="id", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.remplissages.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.remplissages.Add(this);
						this._productID = value.id;
					}
					else
					{
						this._productID = default(Nullable<int>);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_remplissage", Storage="_site", ThisKey="siteID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.remplissages.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.remplissages.Add(this);
						this._siteID = value.id;
					}
					else
					{
						this._siteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reservoirs")]
	public partial class reservoir : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _min;
		
		private string _max;
		
		private System.Nullable<int> _productID;
		
		private System.Nullable<int> _stationID;
		
		private string _state;
		
		private System.Nullable<int> _liter;
		
		private System.Nullable<float> _niveau;
		
		private EntitySet<barémage> _barémages;
		
		private EntitySet<mouvReservoir> _mouvReservoirs;
		
		private EntityRef<produit> _produit;
		
		private EntityRef<station> _station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnminChanging(string value);
    partial void OnminChanged();
    partial void OnmaxChanging(string value);
    partial void OnmaxChanged();
    partial void OnproductIDChanging(System.Nullable<int> value);
    partial void OnproductIDChanged();
    partial void OnstationIDChanging(System.Nullable<int> value);
    partial void OnstationIDChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnliterChanging(System.Nullable<int> value);
    partial void OnliterChanged();
    partial void OnniveauChanging(System.Nullable<float> value);
    partial void OnniveauChanged();
    #endregion
		
		public reservoir()
		{
			this._barémages = new EntitySet<barémage>(new Action<barémage>(this.attach_barémages), new Action<barémage>(this.detach_barémages));
			this._mouvReservoirs = new EntitySet<mouvReservoir>(new Action<mouvReservoir>(this.attach_mouvReservoirs), new Action<mouvReservoir>(this.detach_mouvReservoirs));
			this._produit = default(EntityRef<produit>);
			this._station = default(EntityRef<station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min", DbType="NChar(100)")]
		public string min
		{
			get
			{
				return this._min;
			}
			set
			{
				if ((this._min != value))
				{
					this.OnminChanging(value);
					this.SendPropertyChanging();
					this._min = value;
					this.SendPropertyChanged("min");
					this.OnminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max", DbType="NChar(100)")]
		public string max
		{
			get
			{
				return this._max;
			}
			set
			{
				if ((this._max != value))
				{
					this.OnmaxChanging(value);
					this.SendPropertyChanging();
					this._max = value;
					this.SendPropertyChanged("max");
					this.OnmaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int")]
		public System.Nullable<int> productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int")]
		public System.Nullable<int> stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NChar(100)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_liter", DbType="Int")]
		public System.Nullable<int> liter
		{
			get
			{
				return this._liter;
			}
			set
			{
				if ((this._liter != value))
				{
					this.OnliterChanging(value);
					this.SendPropertyChanging();
					this._liter = value;
					this.SendPropertyChanged("liter");
					this.OnliterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveau", DbType="Real")]
		public System.Nullable<float> niveau
		{
			get
			{
				return this._niveau;
			}
			set
			{
				if ((this._niveau != value))
				{
					this.OnniveauChanging(value);
					this.SendPropertyChanging();
					this._niveau = value;
					this.SendPropertyChanged("niveau");
					this.OnniveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reservoir_barémage", Storage="_barémages", ThisKey="id", OtherKey="reservoirID")]
		public EntitySet<barémage> barémages
		{
			get
			{
				return this._barémages;
			}
			set
			{
				this._barémages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reservoir_mouvReservoir", Storage="_mouvReservoirs", ThisKey="id", OtherKey="reservoirID")]
		public EntitySet<mouvReservoir> mouvReservoirs
		{
			get
			{
				return this._mouvReservoirs;
			}
			set
			{
				this._mouvReservoirs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_reservoir", Storage="_produit", ThisKey="productID", OtherKey="id", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.reservoirs.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.reservoirs.Add(this);
						this._productID = value.id;
					}
					else
					{
						this._productID = default(Nullable<int>);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_reservoir", Storage="_station", ThisKey="stationID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public station station
		{
			get
			{
				return this._station.Entity;
			}
			set
			{
				station previousValue = this._station.Entity;
				if (((previousValue != value) 
							|| (this._station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._station.Entity = null;
						previousValue.reservoirs.Remove(this);
					}
					this._station.Entity = value;
					if ((value != null))
					{
						value.reservoirs.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_barémages(barémage entity)
		{
			this.SendPropertyChanging();
			entity.reservoir = this;
		}
		
		private void detach_barémages(barémage entity)
		{
			this.SendPropertyChanging();
			entity.reservoir = null;
		}
		
		private void attach_mouvReservoirs(mouvReservoir entity)
		{
			this.SendPropertyChanging();
			entity.reservoir = this;
		}
		
		private void detach_mouvReservoirs(mouvReservoir entity)
		{
			this.SendPropertyChanging();
			entity.reservoir = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.responsables")]
	public partial class responsable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cin;
		
		private string _tel;
		
		private string _email;
		
		private EntitySet<station> _stations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public responsable()
		{
			this._stations = new EntitySet<station>(new Action<station>(this.attach_stations), new Action<station>(this.detach_stations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NChar(100)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="responsable_station", Storage="_stations", ThisKey="cin", OtherKey="respCIN")]
		public EntitySet<station> stations
		{
			get
			{
				return this._stations;
			}
			set
			{
				this._stations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stations(station entity)
		{
			this.SendPropertyChanging();
			entity.responsable = this;
		}
		
		private void detach_stations(station entity)
		{
			this.SendPropertyChanging();
			entity.responsable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteProduit")]
	public partial class SiteProduit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _siteID;
		
		private int _produitID;
		
		private EntityRef<produit> _produit;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsiteIDChanging(int value);
    partial void OnsiteIDChanged();
    partial void OnproduitIDChanging(int value);
    partial void OnproduitIDChanged();
    #endregion
		
		public SiteProduit()
		{
			this._produit = default(EntityRef<produit>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_produitID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int produitID
		{
			get
			{
				return this._produitID;
			}
			set
			{
				if ((this._produitID != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproduitIDChanging(value);
					this.SendPropertyChanging();
					this._produitID = value;
					this.SendPropertyChanged("produitID");
					this.OnproduitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_SiteProduit", Storage="_produit", ThisKey="produitID", OtherKey="id", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.SiteProduits.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.SiteProduits.Add(this);
						this._produitID = value.id;
					}
					else
					{
						this._produitID = default(int);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_SiteProduit", Storage="_site", ThisKey="siteID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.SiteProduits.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.SiteProduits.Add(this);
						this._siteID = value.id;
					}
					else
					{
						this._siteID = default(int);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sites")]
	public partial class site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _reservoir;
		
		private string _tel;
		
		private string _adr;
		
		private string _contact;
		
		private string _pay;
		
		private EntitySet<alimentation> _alimentations;
		
		private EntitySet<remplissage> _remplissages;
		
		private EntitySet<SiteProduit> _SiteProduits;
		
		private EntitySet<SiteStation> _SiteStations;
		
		private EntityRef<pay> _pay1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnreservoirChanging(string value);
    partial void OnreservoirChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnadrChanging(string value);
    partial void OnadrChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnpayChanging(string value);
    partial void OnpayChanged();
    #endregion
		
		public site()
		{
			this._alimentations = new EntitySet<alimentation>(new Action<alimentation>(this.attach_alimentations), new Action<alimentation>(this.detach_alimentations));
			this._remplissages = new EntitySet<remplissage>(new Action<remplissage>(this.attach_remplissages), new Action<remplissage>(this.detach_remplissages));
			this._SiteProduits = new EntitySet<SiteProduit>(new Action<SiteProduit>(this.attach_SiteProduits), new Action<SiteProduit>(this.detach_SiteProduits));
			this._SiteStations = new EntitySet<SiteStation>(new Action<SiteStation>(this.attach_SiteStations), new Action<SiteStation>(this.detach_SiteStations));
			this._pay1 = default(EntityRef<pay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservoir", DbType="NChar(100)")]
		public string reservoir
		{
			get
			{
				return this._reservoir;
			}
			set
			{
				if ((this._reservoir != value))
				{
					this.OnreservoirChanging(value);
					this.SendPropertyChanging();
					this._reservoir = value;
					this.SendPropertyChanged("reservoir");
					this.OnreservoirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NChar(100)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adr", DbType="NChar(100)")]
		public string adr
		{
			get
			{
				return this._adr;
			}
			set
			{
				if ((this._adr != value))
				{
					this.OnadrChanging(value);
					this.SendPropertyChanging();
					this._adr = value;
					this.SendPropertyChanged("adr");
					this.OnadrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="NChar(100)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay", DbType="NChar(100)")]
		public string pay
		{
			get
			{
				return this._pay;
			}
			set
			{
				if ((this._pay != value))
				{
					if (this._pay1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpayChanging(value);
					this.SendPropertyChanging();
					this._pay = value;
					this.SendPropertyChanged("pay");
					this.OnpayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_alimentation", Storage="_alimentations", ThisKey="id", OtherKey="siteID")]
		public EntitySet<alimentation> alimentations
		{
			get
			{
				return this._alimentations;
			}
			set
			{
				this._alimentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_remplissage", Storage="_remplissages", ThisKey="id", OtherKey="siteID")]
		public EntitySet<remplissage> remplissages
		{
			get
			{
				return this._remplissages;
			}
			set
			{
				this._remplissages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_SiteProduit", Storage="_SiteProduits", ThisKey="id", OtherKey="siteID")]
		public EntitySet<SiteProduit> SiteProduits
		{
			get
			{
				return this._SiteProduits;
			}
			set
			{
				this._SiteProduits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_SiteStation", Storage="_SiteStations", ThisKey="id", OtherKey="siteID")]
		public EntitySet<SiteStation> SiteStations
		{
			get
			{
				return this._SiteStations;
			}
			set
			{
				this._SiteStations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pay_site", Storage="_pay1", ThisKey="pay", OtherKey="name", IsForeignKey=true, DeleteRule="CASCADE")]
		public pay pay1
		{
			get
			{
				return this._pay1.Entity;
			}
			set
			{
				pay previousValue = this._pay1.Entity;
				if (((previousValue != value) 
							|| (this._pay1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pay1.Entity = null;
						previousValue.sites.Remove(this);
					}
					this._pay1.Entity = value;
					if ((value != null))
					{
						value.sites.Add(this);
						this._pay = value.name;
					}
					else
					{
						this._pay = default(string);
					}
					this.SendPropertyChanged("pay1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_alimentations(alimentation entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_remplissages(remplissage entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_remplissages(remplissage entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_SiteProduits(SiteProduit entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_SiteProduits(SiteProduit entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_SiteStations(SiteStation entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_SiteStations(SiteStation entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteStation")]
	public partial class SiteStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _siteID;
		
		private int _stationID;
		
		private EntityRef<site> _site;
		
		private EntityRef<station> _station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsiteIDChanging(int value);
    partial void OnsiteIDChanged();
    partial void OnstationIDChanging(int value);
    partial void OnstationIDChanged();
    #endregion
		
		public SiteStation()
		{
			this._site = default(EntityRef<site>);
			this._station = default(EntityRef<station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_SiteStation", Storage="_site", ThisKey="siteID", OtherKey="id", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.SiteStations.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.SiteStations.Add(this);
						this._siteID = value.id;
					}
					else
					{
						this._siteID = default(int);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="station_SiteStation", Storage="_station", ThisKey="stationID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public station station
		{
			get
			{
				return this._station.Entity;
			}
			set
			{
				station previousValue = this._station.Entity;
				if (((previousValue != value) 
							|| (this._station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._station.Entity = null;
						previousValue.SiteStations.Remove(this);
					}
					this._station.Entity = value;
					if ((value != null))
					{
						value.SiteStations.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(int);
					}
					this.SendPropertyChanged("station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
